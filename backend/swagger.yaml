openapi: 3.0.0
info:
  version: 1.0.0
  title: eCommerce
  description: >-
    Aplicación desacoplada de ventas online sobre Bases de Datos MongoDB
    - Rubro: vestimenta - 
    Provee las siguientes funcionalidades:
    1.- Organización de productos de acuerdo a categorias y subcategorías
    2.- Registro, logín y autenticación con credenciales locales y redes sociales 
    3.- Redes Sociales disponbles: Google, Facebook, Tweeter, GitHub, Instagram
    4.- Sistema de pagos automatizado
    5.- Galería de productos con carrusel de multiples imágenes
  contact:
    name: Karen Urbano- Camilo Morales Sanchez - Willy Escobar
    email: moorales.camilo@gmail.com 

servers:
  - url: https://ecommercetzuzul2022.ue.r.appspot.com/api/v1
  - url: http://localhost:8081/api/v1

tags:
  - name: Users
  - name: Auth
  - name: SocialAuth
  - name: SubCategories
  - name: Categories
  - name: Products
  - name: Reviews
  - name: Cart
  - name: Payment

paths:
  /payment/pay:
    post:
      description: "Crea intento de pago"
      tags:
        - Payment
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Existe un carrito por pagar"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Bad request"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Es necesario el token"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Internal error server"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/:
    get:
      description: "Obtener todos los productos paginados"
      tags:
        - Products
      security:
        - cookieAuth: []
      parameters: 
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: "cantidad de productos a mostrar"
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: "página a mostrar" 
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/{slug}/:
    get:
      description: "Obtener info de un producto"
      tags:
        - Products
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
          description: "identificador del producto amigable con los buscadores"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/by_seller/{sellerId}:
    get:
      description: "Obtener todos los productos con paginado cuztomizable que ha publicado un vendedor"
      tags:
        - Products
      parameters:
        - in: path
          name: sellerId
          schema:
            type: string
          required: true
          description: Id del vendedor
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: "cantidad de productos a mostrar"
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: "página a mostrar" 
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/filters:
    get:
      description: "Obtener todos los productos resultantes del filtro paginados"
      tags:
        - Products
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: "nombre del producto"
        - in: query
          name: priceHigherThan
          schema:
            type: number
          required: false
          description: "precio superior a:"
        - in: query
          name: priceLessThan
          schema:
            type: number
          required: false
          description: "precio inferior a:"
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: "id de la categoría"
        - in: query
          name: subcategory
          schema:
            type: string
          required: false
          description: "id de la subcategoría"
        - in: query
          name: popular
          schema:
            type: boolean
          required: false
          description: "si el producto es de lo más vendido"
        - in: query
          name: color
          schema:
            type: string
          required: false
          description: "color del producto"
        - in: query
          name: brand
          schema:
            type: string
          required: false
          description: "marca del producto"
        - in: query
          name: size
          schema:
            type: string
          required: false
          description: "talla del producto" 
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: "cantidad de productos a mostrar"
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: "página a mostrar"       
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/search:
    get:
      description: "Obtener todos los productos activos con un paginado cuztomizable cuyo nombre, descripción, marca, color, sku, categoría o subcategoría coincida con el término de búsqueda."
      tags:
        - Products
      parameters:
        - in: query
          name: termOfSearch
          schema:
            type: string
          required: false 
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: "cantidad de productos a mostrar"
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: "página a mostrar"       
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product:
    post:
      description: "Crear producto (admin y vendedor)"
      tags:
        - Products
      requestBody:
        description: "Información del producto a crear"
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/product"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/add-image/{id}:
    post:
      description: "Crear producto (admin y vendedor)"
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "id del producto"
      requestBody:
        description: "Información del producto a crear"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: array
                  items:
                    type: string
                    format: binary
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/remove-image/{id}/:
    put:
      description: "Remover una imagen"
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id del producto"
      requestBody:
        description: "Ruta del producto"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                 type: string
                 example: "http://localhost:8081/public/product/0b3314ee-3ea5-470a-a3e7-625a03454544.jpg"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/{id}:
    put:
      description: "Editar producto (admin y vendedor)"
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id del producto a modificar"
      requestBody:
        description: "Información del producto a editar"
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/product"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/change_status/{id}:
    put:
      description: "Habilitar o inhabilitar un producto"
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id del producto"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /product/{id}/:
    delete:
      description: "Eliminar producto"
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificador del producto"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Review was successfully deleted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        403:
          description: "Forbidden: insufficient permissions"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "You are not allowed to delete this review - Review not found"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/{id}:
    get:
      description: "Detalle de la review"
      tags:
        - Reviews
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "id de la review"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/reviewsOfProduct/{productId}:
    get:
      description: "Obtener las reviews de un producto"
      tags:
        - Reviews
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
          description: "id del producto"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/reviewsOfUser/{userId}:
    get:
      description: "Obtener las reviews de un usuario"
      tags:
        - Reviews
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: "id del usuario"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/:
    post:
      description: "Crear review"
      tags:
        - Reviews
      requestBody:
        description: "Título de la review"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Muy buena calidad"
                comment:
                  type: string
                  example: "Muy buena calidad, lo volvería a comprar"
                stars:
                  type: number
                  example: 5
                productID:
                  type: string
                  example: "62aa4344d97f192a509a1263"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/{id}/:
    put:
      description: "Editar una review (sólo si es el autor)"
      tags:
        - Reviews
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id de la review"
      requestBody:
        description: "Nombre de la review"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Muy buena calidad"
                comment:
                  type: string
                  example: "Muy buena calidad, lo volvería a comprar"
                stars:
                  type: number
                  example: 5
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /review/delete_review/{id}:
    delete:
      description: "Eliminar una review"
      tags:
        - Reviews
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificador de la review"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Review was successfully deleted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        403:
          description: "Forbidden: insufficient permissions"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "You are not allowed to delete this review - Review not found"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /cart:
    get:
      description: "Ruta para administración del carrito de compras"
      tags:
        - Cart
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Los Items del carrito fueron obtenidos exitosamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Petición de solicitud de items de carrrito con errores"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: pedido de carrito rechazado por el servidor "
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Problemas con el servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /cart/clear:
    put:
      description: "Vacía el carrito"
      tags:
        - Cart
      security:
        - cookieAuth: []
      responses:
        200:
          description: "El carrito fue exitosamente vaciado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Error en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: Servodor rechaza el pedido"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Problemas con el servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /cart/add-item:
    post:
      description: "Agregar un item al carrito"
      tags:
        - Cart
      requestBody:
        description: "Datos del producto a agregar"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: string
                  example: "62aa04ff6e95f9f27cdf6742"
                amount:
                  type: number
                  example: 1
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Producto agregado al carrito satisfactoriamentee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Producto no agregado por error en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: el servidor no puedo agregar el producto"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Problemas de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /cart/remove-item/{id}:
    delete:
      description: "Eliminar un producto del carrito"
      tags:
        - Cart
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificador de producto"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Producto satisfactoriamente eliminado del carrito"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "No se puede eliminar producto, petición mal realizada"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: inconvenientes del servidor para satisfacer lapetición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /subcategory:
    get:
      description: "Obtiene las subcategorias de productos"
      tags:
        - SubCategories
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Devuelve la Lista subcategorias existentes"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "El Pedido de consulta de lista de SubCategorias está mal realizado"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: la petición es correcta pero el servidor se niega a ofrecerte el recurso por falta de autorización"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Problemas con el servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /subcategory/admin:
    get:
      description: "Ruta para administración de las subcategorias de productos a nivel usuario ADMIN que incluye subcategorías borradas"
      tags:
        - SubCategories
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Devuelve la Lista subcategorias activas y también con marca de borrado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Petición de ADMIN sobre sub categorías mal realizada"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: Rechazo por falta de autorización"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /subcategory/:
    post:
      description: "Alta de sub Categorías"
      tags:
        - SubCategories
      requestBody:
        description: "Datos necesarios para el alta de Sub Categorías"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                 type: string
                 example: "name"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Sub Categoría dada de alta satisfactoriamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Sub Categoría NO creada a causa de petición mal realizada"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: No existen suficientes privilegiospara crear una Sub Categoría"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "No se pudo crear la Sub Categoría por un error interno de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"  
  /subcategory/{id}:
    put:
      description: "Modificación de Sub Categorías"
      tags:
        - SubCategories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificacior de Sub Categoría"
      requestBody:
        description: "Nombre / status de sub categoría a modificar"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                 type: string
                 example: "name"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Nombre/Status de sub categoría cambiado exitosamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Petición de cambio de nombre/status desub categoría mal realizado"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: No se está autorizado a cambiar el nombre de la sub categoría"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Por un Error interno de servidor no se pudo cambiar el nombre de la subcategoría"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"              
  /subcategory/admin/{id}:
    put:
      description: "Modificación de todos los atriburtos d euna subCategoría por parte de un administrador"
      tags:
        - SubCategories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificador de sub categroría a modificar"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Sub categoría correctamente modificada"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "Modificación fallida a causa de error en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: Falta inicio de sesión"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Pedido no resuelto, Error Interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"   
  /category:
    get:
      description: "Obtener las todas las categorías activas junto con las subcategorías activas"
      tags:
        - Categories
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "desription here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "desription here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/{id}:
    get:
      description: "Obtener categoría por id"
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "id de la categoría"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/:
    post:
      description: "Crear categoría"
      tags:
        - Categories
      requestBody:
        description: "Info de la categoría"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "categoría 1"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/{id}/:
    put:
      description: "Editar una categoría"
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id de la categoría"
      requestBody:
        description: "Nombre de la categoría"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                 type: string
                 example: "name"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/change_status/{id}:
    put:
      description: "Activar o desactivar una categoría"
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id de la categoría"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/{idCategory}/add_subcategory:
    patch:
      description: "Añadir una subcategoría a determinada categoría"
      tags:
        - Categories
      parameters:
        - in: path
          name: idCategory
          schema:
            type: string
          required: true
          description: "Id de la categoría"
      requestBody:
        description: "Id de la subcategoría a añadir"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subcategoryId:
                 type: string
                 example: "fhhiei7eehu388394hhhg533"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /category/{id}/{subcategoryId}:
    patch:
      description: "Remover subcategoría de una categoría"
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Id de la categoría"
        - in: path
          name: subcategoryId
          schema:
            type: string
          required: true
          description: "Id de la subcategoría"
      security:
        - cookieAuth: []
      responses:
        200:
          description: "description here"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNoPagination"
        400:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "description here"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"  
  /signup/:
    post:
      description: "Ruta de Registro de Usuarios"
      tags:
        - Auth
      requestBody:
        description: "Alta de usuario en el sistema"
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        200:
          description: "Usuario registrado exitosamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessfulAuth"
        400:
          description: "Petición de registro erroneo"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /login/:
    post:
      tags:
        - Auth
      requestBody:
        description: "Inicio de sesión de Usuarios"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: quemojojojo@gmail.com
                password:
                  type: string
                  example: 12345
      security: []
      responses:
        200:
          description: "Usuario autorizado a ingresar al sistema"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: cookie=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessfulAuth"

        400:
          description: "Pedido de autorización con errores"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        401:
          description: "Forbidden: Cuenta erronea"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /logout/:
    post:
      description: "Desconexion de Usuario en el sistema, fin de Sesión"
      tags:
        - Auth
      responses:
        200:
          description: "Desconexión exitosa del sistema"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully Message"
  /session/:
    get:
      description: "Sesión a través de Redes Sociales"
      tags:
        - Auth
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Inicio de Sesión Con Redes Sociales Exitosa"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessfulAuth"
        400:
          description: "Petición de ingreso a traves de facebook rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "Forbidden: Cuenta erronea"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  
  /facebook/:
    get:
      description: "Obtención de credenciales en Facebook"
      tags:
        - SocialAuth
      responses:
        200:
          description: "Ingreso a través de credenciales de Facebook exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful login"
        400:
          description: "Ingreso a traves de facebook rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /twitter/:
    get:
      description: "Obtención de credenciales en Twitter"
      tags:
        - SocialAuth
      responses:
        200:
          description: "Ingreso a través de credenciales de Twitter exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful login"
        400:
          description: "Petición de ingreso a traves de Twitter rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /github/:
    get:
      description: "Obtención de credenciales en GitHub"
      tags:
        - SocialAuth
      responses:
        200:
          description: "Ingreso a través de credenciales de GitHub exitoso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful login"
        400:
          description: "Petición de ingreso a traves de GitHub rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /instagram/:
    get:
      description: "Obtención de credenciales en Instagram"
      tags:
        - SocialAuth
      responses:
        200:
          description: "Ingreso a través de credenciales de Instagram exitosa"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful login"
        400:
          description: "Petición de ingreso a través de Instagram rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"



  /google/:
    get:
      description: "Obtención de credenciales en Google"
      tags:
        - SocialAuth
      responses:
        200:
          description: "Ingreso a través de credenciales de Google exitoso"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful login"
        400:
          description: "Petición de ingreso a través de Google rechazada por errores en la petición"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /user/:
    put:
      description: "Modificación de datos de Usuario"
      tags:
        - Users
      security:
        - cookieAuth: []
      requestBody:
        description: "Peticion de actualizacion de informacion de usuarios"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "name"
                email:
                  type: string
                  example: correo@correo.com
                password:
                  type: string
                  example: "Abc123**12"
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: "Modificación de datos de usuario exitosa"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessfulAuth"
        400:
          description: "Error en la petición de modificación de datos de Usuario"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /user/{id}:
    put:
      description: "Modificación de Usuario a partir de su id"
      tags:
        - Users
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: "Identificador de Usuario"
      requestBody:
        description: "Mofificacion de datos"
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "name"
                email:
                  type: string
                  example: correo@correo.com
                role:
                  type: integer
                  example: 1
                password:
                  type: string
                  example: "Abc123**12"
                image:
                  type: string
                  format: binary
                status:
                  type: boolean
                  example: true
      responses:
        200:
          description: "Datos de usuario se han modificado exitosamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseSuccessfulAuth"
        400:
          description: "Rechazo de petición: pedido mal realizado"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /user:
    get:
      description: "Obtener Lista de Ususarios"
      tags:
        - Users
      security:
        - cookieAuth: []
      responses:
        200:
          description: "Listade usuarios obtenida exitosamente"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listPagination"
        400:
          description: "Error en el pedido de lista de usuarios"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        403:
          description: "No es posible realizar la peticion, posible error de cuenta"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        500:
          description: "Error interno de Servidor"
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/errorMessage"

components:
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
          example: "name"
        email:
          type: string
          example: correo@correo.com
        role:
          type: integer
          example: 1
        password:
          type: string
          example: "Abc123**12"
        image:
          type: string
          format: binary
    product:
      type: object
      properties:
        name:
          type: string
          example: "camisa"
        description:
          type: string
          example: camisa elaborada en algodón
        price:
          type: integer
          example: 200
        discount:
          type: integer
          example: 20
        categoryID:
          type: string
          example: "62994629ff0d5c0f5458aa5d"
        subCategoryID:
          type: string
          example: "62abcc1dd2a929b000f603aa"
        stock:
          type: integer
          example: 40
        image:
          type: array
          items:
            type: string
            format: binary
        popular:
          type: boolean
          example: true
        sizes: 
          type: array
          items:
            type: string
        colors:
          type: array
          items:
            type: string
        brand:
          type: string
          example: "Zara"
        sku:
          type: string
          example: "AH1dd3O"
    responseSuccessfulAuth:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        message:
          type: string
          example: Lorem Ipsum is simply dummy text of the printing and typesetting
        name:
          type: string
          example: name
        email:
          type: string
          example: correo@correocom
        image:
          type: string
          example: http://localhost:8081/public/user/adba2f76-2a65-4566-bdae-9b8a0a7ac2c4.jpg
        role:
          type: integer
          example: 1
        id:
          type: string
          example: correo@correocom
    errorMessage:
      type: object
      properties:
        ok:
          type: boolean
          example: false
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                example: "Lorem Ipsum is simply dummy text of the printing and typesetting"
    listPagination:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        message:
          type: string
          example: Lorem Ipsum is simply dummy text of the printing and typesetting
        data:
          type: object
          properties:
            docs:
              type: array
              items:
                type: object
            information:
              type: object
              properties:
                totalDocs:
                  type: integer
                  example: 200
                limit:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 20
                page:
                  type: integer
                  example: 1
                pagingCounter:
                  type: integer
                  example: 1
                hasPrevPage:
                  type: boolean
                  example: false
                hasNextPage:
                  type: boolean
                  example: true
                prevPage:
                  type: string
                  example: null
                nextPage:
                  type: string
                  example: bull
    listNoPagination:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        message:
          type: string
          example: Lorem Ipsum is simply dummy text of the printing and typesetting
        data:
          type: object
          properties:
            docs:
              type: array
              items:
                type: object
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
